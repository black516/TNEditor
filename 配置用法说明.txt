从上周开始的想法，到现在基本实现完整功能，其中感触还是很大的。我觉得，自己动手能力和实践能力都有所提升，做事情也变得有条不紊了。

由于这次的开发基本没有用到range对象，所以，很好的兼容了chrome浏览器，但是IE浏览器还没有做兼容（因为所依赖的基本编辑器部分这次并没有做多少改进）。

下面就讲下这个编辑器的配置和用法：

1、编辑器依赖jquery库，我用的是1.8.2，实际上1.4以上都是支持的，但我并没有测试过；

2、编辑器由一个基本编辑器扩展开发，这个基本编辑器是上次开发定制版线路编辑器中诞生的。结构个人觉得还行，只是兼容性上差一些

3、编辑器由菜单、侧边栏、编辑区域构成，侧边栏可以对编辑区域的文档进行比较完整的控制；

4、由编辑区域生成侧边栏树结构的算法比较核心，这个版本只是完成了初步的生成，做到了基本可用，不过还不够完美；

5、编辑器在启动渲染的时候会把一个json配置读进来行程一个模板文档，然后用户根据这个模板文档和侧边栏进行文档的编辑，操作包括了增加模板块、复制选中块、删除选中块、移动选中块；侧边栏本身包含的操作有刷新同步文档、折叠所有树节点；

6、json的配置说明：
	//创建一个配置变量
	var SEditorConfig = {
	//文档根节点
 	root:'tourSection_unniuren',
 	//文档主要内容
 	content:{
 		/**内容名值对：
 		 * 名称是由nodeName和className构成，还可以包含了对该节点可进行的操作说明
 		 * 例如：'div.className#edit'这个名称告诉文档，要生成一个类名为className的div标签，并且这个div标签是可编辑的
 		 * className可以有多个，用空格隔开即可；名称可以包含这三部分(nodeName、className、操作说明)的一个或者多个或者全部
 		 * 
 		 * 值可以是数组或者js对象，数组的话，要包含名值对，
 		 *
 		 * 这样的json结构基本和dom结构是一一对应的
 		 *
 		 * 不过在处理文本和图像的时候，配置有一些特别：
 		 * 1、所有的text节点（文本）都用一个名称为'text'的key来说明
 		 * 2、所有的图片（img标签）都用一个名称为'src'的key来说明，可以给img加'title'属性，见下面'秦淮河'图片的例子
 		 * 
 		 */
 		'div.tourContent_new':[{
 			'div.day_title_new':{
 				'h3':{
 					'em':{
 						'text':'第1天'
 					},
 					'div#edit':{
 						'text':'请在这里输入行程标题'
 					}
 				},
 				'ul.time_s_photo clearfix':[{
 					'li':{
 						'a':{
 							'img#edit':{
 								'src':'http://list.image.baidu.com/t/image/w_mengchong.jpg',
 								'title':'秦淮河'
 							}
 						},
 						'div':{
 							'a#edit':{
 								'text':'秦淮河'
 							}
 						}
 					}
 				},
 				{'li':{
 						'a':{
 							'img':{
 								'src':'http://images.tuniu.com/images/2006-07-30/4/4187UI1l64ymaEW4s.jpg',
 								'title':'沙河'
 							}
 						},
 						'div':{
 							'a#edit':{
 								'text':'沙河'
 							}
 						}
 					}
 				}],
 				'div.tour_line_f#edit':[{
 					'text':'请在这里输入行程描述，内容可以为“航班信息”、“游览路线”等相关内容'
 				}]
 			},
 			'div.tour_food_f':[
 				{
	 				'div.tour_item':{
	 					'em':{
	 						'text':'用餐'
	 					},
	 					'div':[
	 						{
		 						'text':'早餐：',
		 						'span.po_dining_day#edit':{
		 							'text':'敬请自理'
		 						}
		 					},
		 					{
		 						'text':'&#160;午餐：',
		 						'span.po_dining_day#edit':{
		 							'text':'敬请自理'
		 						}
		 					},
		 					{
		 						'text':'&#160;晚餐：',
		 						'span.po_dining_day#edit':{
		 							'text':'敬请自理'
		 						}
		 					}
	 					]
	 				}
	 			},
 				{
 					'div.tour_item':{
	 					'em':{
	 						'text':'住宿'
	 					},
	 					'div#edit':{
	 						'text':'南京路宝宾馆 2人间或同级（独卫、彩电、热水、空调），以当天入住为准'
	 					}
	 				}
 				}
 			]
 		}]
 	}
 }

7、如何取出编辑的文档的html内容，如何用编辑器编辑已有的文档
编辑器提供了两个方法：
getHTMLContent(editorName): 该方法可以取出编辑好的html内容，编辑器会去掉没用的标签，并把可编辑状态都清除
setHTMLContent(content): 该方法可以用来往编辑器里面放内容，不过要保证放的文档和使用的json配置保持一致，这样才能保证您能操作您的文档。